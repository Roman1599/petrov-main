{
  "uid" : "e1802625c4809dbf",
  "name" : "Change profile name",
  "fullName" : "tests.feature_profile_test.TestProfileFeature#test_change_profile_name",
  "historyId" : "42b4a115007c35c622675a0baedb491a",
  "time" : {
    "start" : 1707143701585,
    "stop" : 1707143710527,
    "duration" : 8942
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-b6d78ace=\"\">...</button> is not clickable at point (1789, 976). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\n  (Session info: headless chrome=112.0.5615.165)",
  "statusTrace" : "self = <feature_profile_test.TestProfileFeature object at 0x7f3fff5b4620>\n\n    @allure.title(\"Change profile name\")\n    @allure.severity(\"Critical\")\n    # @pytest.mark.smoke\n    def test_change_profile_name(self):\n        self.login_page.open()\n        self.login_page.enter_login(self.data.LOGIN)\n        self.login_page.enter_password(self.data.PASSWORD)\n        self.login_page.click_submit_button()\n        self.dashboard_page.is_opened()\n        self.dashboard_page.click_my_info()\n        self.personal_page.is_opened()\n        self.personal_page.change_name(f\"Test {random.randint(1,100)}\")\n>       self.personal_page.save_changes()\n\ntests/feature_profile_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/personal_page.py:28: in save_changes\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON)).click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f40004ddbb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...oader\\\\\" data-v-d5bfe35b=\\\\\"\\\\\">...\\\\u003C/div>\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-b6d78ace=\"\">...</button> is not clickable at point (1789, 976). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\nE         (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "setup",
    "time" : {
      "start" : 1707143701584,
      "stop" : 1707143701584,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "driver",
    "time" : {
      "start" : 1707143700704,
      "stop" : 1707143701584,
      "duration" : 880
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-b6d78ace=\"\">...</button> is not clickable at point (1789, 976). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\n  (Session info: headless chrome=112.0.5615.165)",
    "statusTrace" : "self = <feature_profile_test.TestProfileFeature object at 0x7f3fff5b4620>\n\n    @allure.title(\"Change profile name\")\n    @allure.severity(\"Critical\")\n    # @pytest.mark.smoke\n    def test_change_profile_name(self):\n        self.login_page.open()\n        self.login_page.enter_login(self.data.LOGIN)\n        self.login_page.enter_password(self.data.PASSWORD)\n        self.login_page.click_submit_button()\n        self.dashboard_page.is_opened()\n        self.dashboard_page.click_my_info()\n        self.personal_page.is_opened()\n        self.personal_page.change_name(f\"Test {random.randint(1,100)}\")\n>       self.personal_page.save_changes()\n\ntests/feature_profile_test.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/personal_page.py:28: in save_changes\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON)).click()\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f40004ddbb0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...oader\\\\\" data-v-d5bfe35b=\\\\\"\\\\\">...\\\\u003C/div>\\\\n  (Session info: headless chrome=112.0.5615.165)\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-b6d78ace=\"\">...</button> is not clickable at point (1789, 976). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\nE         (Session info: headless chrome=112.0.5615.165)\n\n../local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException",
    "steps" : [ {
      "name" : "Open https://opensource-demo.orangehrmlive.com/web/index.php/auth/login page",
      "time" : {
        "start" : 1707143701585,
        "stop" : 1707143703358,
        "duration" : 1773
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Enter login",
      "time" : {
        "start" : 1707143703358,
        "stop" : 1707143704413,
        "duration" : 1055
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "login",
        "value" : "'Admin'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Enter password",
      "time" : {
        "start" : 1707143704413,
        "stop" : 1707143704483,
        "duration" : 70
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "password",
        "value" : "'admin123'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "Click submit",
      "time" : {
        "start" : 1707143704483,
        "stop" : 1707143704526,
        "duration" : 43
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Open https://opensource-demo.orangehrmlive.com/web/index.php/dashboard/index is opened",
      "time" : {
        "start" : 1707143704526,
        "stop" : 1707143705798,
        "duration" : 1272
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Click on 'My info' link",
      "time" : {
        "start" : 1707143705798,
        "stop" : 1707143708346,
        "duration" : 2548
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Open https://opensource-demo.orangehrmlive.com/web/index.php/pim/viewPersonalDetails/empNumber/7 is opened",
      "time" : {
        "start" : 1707143708346,
        "stop" : 1707143708348,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "Change name",
      "time" : {
        "start" : 1707143708348,
        "stop" : 1707143709434,
        "duration" : 1086
      },
      "status" : "passed",
      "steps" : [ {
        "name" : "Change name on 'Test 8'",
        "time" : {
          "start" : 1707143708348,
          "stop" : 1707143709434,
          "duration" : 1086
        },
        "status" : "passed",
        "steps" : [ ],
        "attachments" : [ ],
        "parameters" : [ ],
        "attachmentsCount" : 0,
        "shouldDisplayMessage" : false,
        "stepsCount" : 0,
        "hasContent" : false
      } ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "new_name",
        "value" : "'Test 8'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 1,
      "hasContent" : true
    }, {
      "name" : "Save name",
      "time" : {
        "start" : 1707143709435,
        "stop" : 1707143710525,
        "duration" : 1090
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\" class=\"oxd-button oxd-button--medium oxd-button--secondary orangehrm-left-space\" data-v-10d463b7=\"\" data-v-b6d78ace=\"\">...</button> is not clickable at point (1789, 976). Other element would receive the click: <div class=\"oxd-form-loader\" data-v-d5bfe35b=\"\">...</div>\n  (Session info: headless chrome=112.0.5615.165)\n\n",
      "statusTrace" : "  File \"/usr/local/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/usr/workspace/pages/personal_page.py\", line 28, in save_changes\n    self.wait.until(EC.element_to_be_clickable(self.SAVE_BUTTON)).click()\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 10,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "driver::0",
    "time" : {
      "start" : 1707143710574,
      "stop" : 1707143710660,
      "duration" : 86
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Profile Functionaloty"
  }, {
    "name" : "severity",
    "value" : "Critical"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "feature_profile_test"
  }, {
    "name" : "subSuite",
    "value" : "TestProfileFeature"
  }, {
    "name" : "host",
    "value" : "8bc8b232f133"
  }, {
    "name" : "thread",
    "value" : "1-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.feature_profile_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "critical",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 0,
        "broken" : 48,
        "skipped" : 0,
        "passed" : 341,
        "unknown" : 0,
        "total" : 389
      },
      "items" : [ {
        "uid" : "3c15a0697708dfd4",
        "status" : "passed",
        "time" : {
          "start" : 1707140120781,
          "stop" : 1707140132613,
          "duration" : 11832
        }
      }, {
        "uid" : "20f634192c0917fe",
        "status" : "passed",
        "time" : {
          "start" : 1707137195601,
          "stop" : 1707137207980,
          "duration" : 12379
        }
      }, {
        "uid" : "a3d95d2a1a2644b9",
        "status" : "passed",
        "time" : {
          "start" : 1706895302356,
          "stop" : 1706895315944,
          "duration" : 13588
        }
      }, {
        "uid" : "dc49747f88f47b80",
        "status" : "passed",
        "time" : {
          "start" : 1706891724739,
          "stop" : 1706891737384,
          "duration" : 12645
        }
      }, {
        "uid" : "80721683f10d0ad1",
        "status" : "passed",
        "time" : {
          "start" : 1706888177614,
          "stop" : 1706888190512,
          "duration" : 12898
        }
      }, {
        "uid" : "7735c94bb4a7c50c",
        "status" : "passed",
        "time" : {
          "start" : 1706884513667,
          "stop" : 1706884525567,
          "duration" : 11900
        }
      }, {
        "uid" : "e9291934a183d163",
        "status" : "passed",
        "time" : {
          "start" : 1706880962160,
          "stop" : 1706880975527,
          "duration" : 13367
        }
      }, {
        "uid" : "6dd81a5ab09ccce7",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1706877914906,
          "stop" : 1706877936484,
          "duration" : 21578
        }
      }, {
        "uid" : "132f9e15b187355f",
        "status" : "passed",
        "time" : {
          "start" : 1706808894258,
          "stop" : 1706808905806,
          "duration" : 11548
        }
      }, {
        "uid" : "2d52926aba1a143",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1706805338330,
          "stop" : 1706805351979,
          "duration" : 13649
        }
      }, {
        "uid" : "3e412f56e2eecd58",
        "status" : "passed",
        "time" : {
          "start" : 1706801716487,
          "stop" : 1706801728321,
          "duration" : 11834
        }
      }, {
        "uid" : "a18033e6cb8b1c8f",
        "status" : "passed",
        "time" : {
          "start" : 1706798098681,
          "stop" : 1706798111198,
          "duration" : 12517
        }
      }, {
        "uid" : "f61535624f139257",
        "status" : "passed",
        "time" : {
          "start" : 1706794531043,
          "stop" : 1706794543778,
          "duration" : 12735
        }
      }, {
        "uid" : "3f495197ab69e26e",
        "status" : "passed",
        "time" : {
          "start" : 1706791567754,
          "stop" : 1706791579703,
          "duration" : 11949
        }
      }, {
        "uid" : "d1901116805b9f2b",
        "status" : "passed",
        "time" : {
          "start" : 1706722514296,
          "stop" : 1706722526575,
          "duration" : 12279
        }
      }, {
        "uid" : "8d403fba80f1250d",
        "status" : "passed",
        "time" : {
          "start" : 1706718914968,
          "stop" : 1706718928017,
          "duration" : 13049
        }
      }, {
        "uid" : "b95e793298befcdb",
        "status" : "passed",
        "time" : {
          "start" : 1706715306353,
          "stop" : 1706715319031,
          "duration" : 12678
        }
      }, {
        "uid" : "8907152a7cdb5676",
        "status" : "passed",
        "time" : {
          "start" : 1706711692586,
          "stop" : 1706711704140,
          "duration" : 11554
        }
      }, {
        "uid" : "d3b3f2fafb4499f2",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1706708103700,
          "stop" : 1706708125936,
          "duration" : 22236
        }
      }, {
        "uid" : "f90c0c2d78fb3678",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.TimeoutException: Message:",
        "time" : {
          "start" : 1706705160571,
          "stop" : 1706705181326,
          "duration" : 20755
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "e1802625c4809dbf.json",
  "parameterValues" : [ ]
}